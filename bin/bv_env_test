#!/bin/bash -f

# this scripts runs bv_env either from the normal binary directory (same as
# this script), of from a package install directory specified in the
# BRAINVISA_PACKAGE_INSTALL_PREFIX variable if it is defined.
# this is used to run tests from a build directory (with correctly setup
# Makefiles/ctest) for testing installed packages.
#
# Remote mode:
# IF an additional env variable BRAINVISA_TEST_REMOTE_COMMAND is set,
# it is prepended to the test command, and can be used to connect
# to a remote test host. For instance if:
# BRAINVISA_TEST_REMOTE_COMMAND=ssh -t -X testmachine
# BRAINVISA_PACKAGE_INSTALL_PREFIX=/home/test/brainvisa_testing
# then the command will be:
# ssh -t -X testmachine /home/test/brainvisa_testing/bin/bv_env <commandline>
#
# Other example using docker:
# BRAINVISA_TEST_REMOTE_COMMAND=docker run --rm -v /home/test:/home/test -u "$(id -u):$(id -g)" -e TMPDIR=/home/test/tmp -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=$DISPLAY cati/brainvisa-test:ubuntu-16.04 xvfb-run

# first, on Mac, re-set DYLD_*_PATH variables because MacOS 10.10+ erases them.
if [ -z "${DYLD_LIBRARY_PATH}" -a -n "${BV_MAC_LIB_PATH}" ]; then
  export DYLD_LIBRARY_PATH=${BV_MAC_LIB_PATH}
fi
if [ -z "${DYLD_FRAMEWORK_PATH}" -a -n "${BV_MAC_FWK_PATH}" ]; then
  export DYLD_FRAMEWORK_PATH=${BV_MAC_FWK_PATH}
fi
if [ -z "${DYLD_FALLBACK_LIBRARY_PATH}" -a -n "${BV_MAC_FBL_PATH}" ]; then
  export DYLD_FALLBACK_LIBRARY_PATH=${BV_MAC_FBL_PATH}
fi

# use only basename of main executable
# (to avoid hard-coded /usr/bin/python for instance)
if [ -z ${BRAINVISA_PACKAGE_INSTALL_PREFIX} ]; then
  BRAINVISA_PACKAGE_INSTALL_PREFIX=$(dirname -- "$(dirname -- "$0")")
fi

# check if we test windows binary tree
if [ -f "${BRAINVISA_PACKAGE_INSTALL_PREFIX}/bin/bv_env.exe" ]; then
  BRAINVISA_ENV="${BRAINVISA_PACKAGE_INSTALL_PREFIX}/bin/bv_env.exe"
else
  # check if we test linux or mac binary tree
  if [ -f "${BRAINVISA_PACKAGE_INSTALL_PREFIX}/bin/bv_env" ]; then
    BRAINVISA_ENV="${BRAINVISA_PACKAGE_INSTALL_PREFIX}/bin/bv_env"
  fi
fi

if [ -z "${BRAINVISA_ENV}" ]; then
  echo "No bv_env command found for in ${BRAINVISA_PACKAGE_INSTALL_PREFIX}/bin"
  exit 1
fi

CMD=$(basename -- "$1")
shift

# get variables substitution inside arguments
i=0
for var_value in "$@"
do
  exp[$i]=$(eval printf '%s' ${var_value// /\\ })
  i=$(($i+1))
done

bv_env_cmd=("${BRAINVISA_ENV}")
if [ ".${BRAINVISA_ENV##*.}" == ".exe" ]; then
    # Use wine command if defined
    if [ -n "${WINECMD}" ]; then
        bv_env_cmd=("${WINECMD}" "${bv_env_cmd[@]}")
    fi
fi

echo ${BRAINVISA_TEST_REMOTE_COMMAND} "${bv_env_cmd[@]}" "$CMD" ${exp[@]}
exec ${BRAINVISA_TEST_REMOTE_COMMAND} "${bv_env_cmd[@]}" "$CMD" ${exp[@]}

