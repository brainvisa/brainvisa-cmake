#!/usr/bin/env python
# -*- coding: utf-8 -*-

#  This software and supporting documentation are distributed by
#      Institut Federatif de Recherche 49
#      CEA/NeuroSpin, Batiment 145,
#      91191 Gif-sur-Yvette cedex
#      France
#
# This software is governed by the CeCILL-B license under
# French law and abiding by the rules of distribution of free software.
# You can  use, modify and/or redistribute the software under the 
# terms of the CeCILL-B license as circulated by CEA, CNRS
# and INRIA at the following URL "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability.
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security.
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL-B license and that you accept its terms.

from brainvisa.compilation_info import *

nodes = {}
print 'digraph packages_dependencies {'
for package in compiled_packages:
  if package.endswith( '-dev' ) or package.endswith( '-doc' ): continue
  node = nodes.setdefault( package, str( len( nodes ) ) )
  print '  %s [ label="%s" ]' % ( node, package )
for package in thirdparty_packages:
  node = nodes.setdefault( package, str( len( nodes ) ) )
  print '  %s [ label="%s", color=orange ]' % ( node, package )
for source_package, dependencies in packages_dependencies.iteritems():
  if source_package.endswith( '-dev' ): continue
  for dependency_type, dest_package, version_ranges, binary_independent in dependencies:
    if dependency_type == 'DEPENDS':
      color='black'
    elif dependency_type == 'RECOMMENDS':
      color='green'
    else:
      color='blue'
    print '  %s -> %s [ color=%s ]' % ( nodes[ source_package ], nodes[ dest_package ], color )
print '}'