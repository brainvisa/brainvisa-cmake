find_package( Jasper )

function( BRAINVISA_PACKAGING_COMPONENT_INFO component package_name package_maintainer package_version )
  set( ${package_name} ${component} PARENT_SCOPE )
  set( ${package_maintainer} "IFR 49" PARENT_SCOPE )
  set( ${package_version} "0.0.0" PARENT_SCOPE )
  if( EXISTS "${JASPER_INCLUDE_DIR}/jasper/jas_config.h" )
    file( READ "${JASPER_INCLUDE_DIR}/jasper/jas_config.h" header )
    string( REGEX MATCH "#define[ \\t]*JAS_VERSION[ \\t]*\"([^\"]*)\"" match "${header}" )
    if( match )
      set( ${package_version} "${CMAKE_MATCH_1}" PARENT_SCOPE )
    endif()
  endif()
endfunction()

function( BRAINVISA_PACKAGING_COMPONENT_RUN component )
  if(JASPER_FOUND)
    BRAINVISA_INSTALL_RUNTIME_LIBRARIES( ${component} ${JASPER_LIBRARIES} )
    set(${component}_PACKAGED TRUE PARENT_SCOPE)
  else()
    set(${component}_PACKAGED FALSE PARENT_SCOPE)
    #MESSAGE( SEND_ERROR "Impossible to create packaging rules for ${component} : the package was not found." )
  endif()
endfunction()

# this variable declares the install rule for the dev package
set( jasper-dev-installrule TRUE )

function( BRAINVISA_PACKAGING_COMPONENT_DEV component )
  if(JASPER_FOUND)
    BRAINVISA_INSTALL_DIRECTORY( ${JASPER_INCLUDE_DIR}/jasper include/jasper ${component}-dev )
    set(${component}-dev_PACKAGED TRUE PARENT_SCOPE)
  else()
    set(${component}-dev_PACKAGED FALSE PARENT_SCOPE)
    #MESSAGE( SEND_ERROR "Impossible to create packaging rules for ${component}-dev : the package was not found." )
  endif()
endfunction()
