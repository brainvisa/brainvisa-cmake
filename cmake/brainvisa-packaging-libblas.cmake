find_package(BLAS)

function( BRAINVISA_PACKAGING_COMPONENT_INFO component package_name package_maintainer package_version )
  set( ${package_name} ${component} PARENT_SCOPE )
  set( ${package_maintainer} "IFR 49" PARENT_SCOPE )
  # Find version
  set( _version "0.0.0" )
  foreach(lib ${BLAS_LIBRARIES})
    get_filename_component( real "${lib}" REALPATH )
    string( REGEX MATCH "^.*lib.*blas${CMAKE_SHARED_LIBRARY_SUFFIX}[.](.*)$" match "${real}" )
    if( match )
      set( _version "${CMAKE_MATCH_1}" )
      if( ${_version} STREQUAL "3gf.0" OR ${_version} STREQUAL "3gf" )
        set( _version "3.0" )
      endif()
      break()
    endif()
  endforeach()
  BRAINVISA_THIRDPARTY_DEPENDENCY( "${component}" RUN DEPENDS libgfortran2 RUN )
  set( ${package_version} ${_version} PARENT_SCOPE )
endfunction()


function( BRAINVISA_PACKAGING_COMPONENT_RUN component )
  if( BLAS_FOUND )
    if( NOT APPLE)
      set( _libs ${BLAS_LIBRARIES} )
      find_library( _cblas cblas )
      if( _cblas )
        list( APPEND _libs ${_cblas} )
      endif()
      unset( _cblas CACHE )
      find_library( _cblas blas )
      if( _cblas )
        list( APPEND _libs ${_cblas} )
      endif()
      BRAINVISA_INSTALL_RUNTIME_LIBRARIES( ${component} ${_libs} )
    endif()
    set(${component}_PACKAGED TRUE PARENT_SCOPE)
  else()
    set(${component}_PACKAGED FALSE PARENT_SCOPE)
  endif()
endfunction()
